--- a/app/app.go
+++ b/app/app.go
@@ -1,7 +1,6 @@
 package app
 
 import (
-	"fmt"
 	"io"
 
 	clienthelpers "cosmossdk.io/client/v2/helpers"
@@ -42,7 +41,6 @@ import (
 	paramskeeper "github.com/cosmos/cosmos-sdk/x/params/keeper"
 	paramstypes "github.com/cosmos/cosmos-sdk/x/params/types"
 	slashingkeeper "github.com/cosmos/cosmos-sdk/x/slashing/keeper"
 	stakingkeeper "github.com/cosmos/cosmos-sdk/x/staking/keeper"
-	stakingtypes "github.com/cosmos/cosmos-sdk/x/staking/types"
 	icacontrollerkeeper "github.com/cosmos/ibc-go/v10/modules/apps/27-interchain-accounts/controller/keeper"
 	icahostkeeper "github.com/cosmos/ibc-go/v10/modules/apps/27-interchain-accounts/host/keeper"
@@ -122,6 +120,11 @@ func init() {
 	if err != nil {
 		panic(err)
 	}
+	
+	// Set custom power reduction for staking
+	// This allows validators with smaller amounts of ALC  
+	// This means minimum stake for a validator is 1 ALC (1,000,000 uALC)
+	sdk.DefaultPowerReduction = math.NewInt(1_000_000)
 }
 
 // AppConfig returns the default app config.
@@ -219,20 +222,6 @@ func New(
 	// This is necessary for manually registered modules that do not support app wiring.
 	// Manually set the module version map as shown below.
 	// The upgrade module will automatically handle de-duplication of the module version map.
 	app.SetInitChainer(func(ctx sdk.Context, req *abci.RequestInitChain) (*abci.ResponseInitChain, error) {
-		// Set custom power reduction for staking
-		// This allows validators with smaller amounts of ALC
-		if app.StakingKeeper != nil {
-			stakingParams, err := app.StakingKeeper.GetParams(ctx)
-			if err != nil {
-				// If params don't exist yet, use defaults
-				stakingParams = stakingtypes.DefaultParams()
-			}
-			// Set power reduction to 1 million (instead of default ~824 billion)
-			// This means minimum stake for a validator is 1 ALC (1,000,000 uALC)
-			stakingParams.PowerReduction = math.NewInt(1_000_000)
-			if err := app.StakingKeeper.SetParams(ctx, stakingParams); err != nil {
-				return nil, fmt.Errorf("failed to set staking params: %w", err)
-			}
-		}
-
 		if err := app.UpgradeKeeper.SetModuleVersionMap(ctx, app.ModuleManager.GetVersionMap()); err != nil {
 			return nil, err