syntax = "proto3";

package mychain.dex.v1;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "mychain/dex/v1/params.proto";
import "mychain/dex/v1/types.proto";

option go_package = "mychain/x/dex/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mychain/dex/v1/params";
  }

  // OrderBook Queries a list of OrderBook items.
  rpc OrderBook(QueryOrderBookRequest) returns (QueryOrderBookResponse) {
    option (google.api.http).get = "/mychain/dex/v1/order_book/{pair_id}";
  }

  // UserRewards Queries a list of UserRewards items.
  rpc UserRewards(QueryUserRewardsRequest) returns (QueryUserRewardsResponse) {
    option (google.api.http).get = "/mychain/dex/v1/user_rewards/{address}";
  }

  // OrderRewards Queries rewards for specific orders.
  rpc OrderRewards(QueryOrderRewardsRequest) returns (QueryOrderRewardsResponse) {
    option (google.api.http).get = "/mychain/dex/v1/order_rewards/{address}";
  }

  // TierInfo Queries current tier information.
  rpc TierInfo(QueryTierInfoRequest) returns (QueryTierInfoResponse) {
    option (google.api.http).get = "/mychain/dex/v1/tier_info/{pair_id}";
  }

  // LCInfo Queries LiquidityCoin information.
  rpc LCInfo(QueryLCInfoRequest) returns (QueryLCInfoResponse) {
    option (google.api.http).get = "/mychain/dex/v1/lc_info";
  }
  
  // DynamicRewardState Queries dynamic reward state information.
  rpc DynamicRewardState(QueryDynamicRewardStateRequest) returns (QueryDynamicRewardStateResponse) {
    option (google.api.http).get = "/mychain/dex/v1/dynamic_reward_state";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryOrderBookRequest defines the QueryOrderBookRequest message.
message QueryOrderBookRequest {
  uint64 pair_id = 1;
}

// QueryOrderBookResponse defines the QueryOrderBookResponse message.
message QueryOrderBookResponse {
  repeated Order buy_orders = 1 [(gogoproto.nullable) = false];
  repeated Order sell_orders = 2 [(gogoproto.nullable) = false];
}

// QueryUserRewardsRequest defines the QueryUserRewardsRequest message.
message QueryUserRewardsRequest {
  string address = 1;
}

// QueryUserRewardsResponse defines the QueryUserRewardsResponse message.
message QueryUserRewardsResponse {
  cosmos.base.v1beta1.Coin pending_lc = 1 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin claimed_lc = 2 [(gogoproto.nullable) = false];
}

// QueryOrderRewardsRequest defines the QueryOrderRewardsRequest message.
message QueryOrderRewardsRequest {
  string address = 1;
  repeated uint64 order_ids = 2;
}

// QueryOrderRewardsResponse defines the QueryOrderRewardsResponse message.
message QueryOrderRewardsResponse {
  repeated OrderRewardInfo order_rewards = 1 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin total_pending = 2 [(gogoproto.nullable) = false];
}

// QueryTierInfoRequest defines the QueryTierInfoRequest message.
message QueryTierInfoRequest {
  uint64 pair_id = 1;
}

// QueryTierInfoResponse defines the QueryTierInfoResponse message.
message QueryTierInfoResponse {
  uint32 current_tier = 1;
  LiquidityTier tier_info = 2 [(gogoproto.nullable) = false];
  string current_price = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string reference_price = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

// QueryLCInfoRequest defines the QueryLCInfoRequest message.
message QueryLCInfoRequest {}

// QueryLCInfoResponse defines the QueryLCInfoResponse message.
message QueryLCInfoResponse {
  cosmos.base.v1beta1.Coin total_supply = 1 [(gogoproto.nullable) = false];
  string exchange_rate = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string base_reward_rate = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// QueryDynamicRewardStateRequest defines the QueryDynamicRewardStateRequest message.
message QueryDynamicRewardStateRequest {}

// QueryDynamicRewardStateResponse defines the QueryDynamicRewardStateResponse message.
message QueryDynamicRewardStateResponse {
  DynamicRewardState state = 1 [(gogoproto.nullable) = false];
  string current_liquidity = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string liquidity_target = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string price_ratio = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}
