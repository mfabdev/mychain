syntax = "proto3";

package mychain.maincoin.v1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "mychain/maincoin/v1/params.proto";

option go_package = "mychain/x/maincoin/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // BuyMaincoin defines the BuyMaincoin RPC.
  rpc BuyMaincoin(MsgBuyMaincoin) returns (MsgBuyMaincoinResponse);

  // SellMaincoin defines the SellMaincoin RPC.
  rpc SellMaincoin(MsgSellMaincoin) returns (MsgSellMaincoinResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "mychain/x/maincoin/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgBuyMaincoin defines the MsgBuyMaincoin message.
message MsgBuyMaincoin {
  option (cosmos.msg.v1.signer) = "buyer";
  string buyer = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

// MsgBuyMaincoinResponse defines the MsgBuyMaincoinResponse message.
message MsgBuyMaincoinResponse {
  // amount of maincoin purchased
  cosmos.base.v1beta1.Coin amount_purchased = 1 [(gogoproto.nullable) = false];
}

// MsgSellMaincoin defines the MsgSellMaincoin message.
message MsgSellMaincoin {
  option (cosmos.msg.v1.signer) = "seller";
  string seller = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

// MsgSellMaincoinResponse defines the MsgSellMaincoinResponse message.
message MsgSellMaincoinResponse {
  // amount of testusd refunded
  cosmos.base.v1beta1.Coin amount_refunded = 1 [(gogoproto.nullable) = false];
}
