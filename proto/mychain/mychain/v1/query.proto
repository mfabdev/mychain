syntax = "proto3";
package mychain.mychain.v1;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "mychain/mychain/v1/params.proto";
import "mychain/mychain/v1/query_staking.proto";

option go_package = "mychain/x/mychain/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mychain/mychain/v1/params";
  }
  
  // TransactionHistory queries transaction history for an address
  rpc TransactionHistory(QueryTransactionHistoryRequest) returns (QueryTransactionHistoryResponse) {
    option (google.api.http).get = "/mychain/mychain/v1/transaction-history/{address}";
  }
  
  // StakingInfo queries current staking information
  rpc StakingInfo(QueryStakingInfoRequest) returns (QueryStakingInfoResponse) {
    option (google.api.http).get = "/mychain/mychain/v1/staking-info";
  }
  
  // StakingDistributionHistory queries staking distribution history
  rpc StakingDistributionHistory(QueryStakingDistributionHistoryRequest) returns (QueryStakingDistributionHistoryResponse) {
    option (google.api.http).get = "/mychain/mychain/v1/staking-distribution-history";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryTransactionHistoryRequest is request type for the Query/TransactionHistory RPC method
message QueryTransactionHistoryRequest {
  string address = 1;
  uint64 limit = 2;
}

// TransactionRecord represents a transaction history record
message TransactionRecord {
  string tx_hash = 1;
  string type = 2;
  string description = 3;
  repeated cosmos.base.v1beta1.Coin amount = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  string from = 5;
  string to = 6;
  int64 height = 7;
  string timestamp = 8;
}

// QueryTransactionHistoryResponse is response type for the Query/TransactionHistory RPC method
message QueryTransactionHistoryResponse {
  repeated TransactionRecord transactions = 1 [(gogoproto.nullable) = false];
}
